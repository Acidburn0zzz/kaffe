# Native support for standard Java libraries
#
# Copyright (c) 1996, 1997
#	Transvirtual Technologies, Inc.  All rights reserved.
#
# See the file "lib-license.terms" for information on usage and redistribution 
# of this file. 

@VPATHOPT@=	@srcdir@
srcdir=		@srcdir@
prefix=		@prefix@
exec_prefix=	@exec_prefix@
libdir=		@libdir@
INSTROOT=	@INSTROOT@
CC=		@CC@
LD=		@LD@
AR=		@AR@
RANLIB=		@RANLIB@
INCLUDES=	-I$(srcdir) -I../../../include -I$(srcdir)/../../../include -I../../../config -I$(srcdir)/../../../config
CPPFLAGS=	@CPPFLAGS@
CFLAGS=		@CFLAGS@
ALL_CFLAGS=	$(CPPFLAGS) $(CFLAGS) @KAFFEVMFLAGS@ $(INCLUDES) $(EXTRA_CFLAGS)
INSTALL=	@INSTALL@
INSTALL_DATA=	@INSTALL_DATA@
MKDIR=		@MKDIR@
LN=		@LN_S@
DLLTOOL=	@DLLTOOL@
DEPTOOL=	@DEPTOOL@
PIC=		@PIC@
LDFLAGS=	@LIBSHARE@ @LDFLAGS@
LIBS=		@LIBS@
LDTAIL=		@LDTAIL@ @STD_LIBRARIES@
KVER=		@KVER@
OBJEXT=		@OBJEXT@
LIBEXT=		@LIBEXT@

LIBNAME=	libnative
LIB=		$(LIBNAME)$(LIBEXT).$(KVER)
LLIB=		$(LIBNAME)$(LIBEXT)

WRAPPER_CMD=	"s%^\([Jj]ava_[^(]*\).*$$%KAFFE_NATIVE(\1)%p"

OBJECT.IO=\
		FileDescriptor$(OBJEXT) \
		FileInputStream$(OBJEXT) \
		FileOutputStream$(OBJEXT) \
		File$(OBJEXT) \
		ObjectInputStream$(OBJEXT) \
		ObjectOutputStream$(OBJEXT) \
		ObjectStreamClass$(OBJEXT) \
		RandomAccessFile$(OBJEXT)

OBJECT.LANG=\
		ClassLoader$(OBJEXT) \
		Class$(OBJEXT) \
		Compiler$(OBJEXT) \
		Double$(OBJEXT) \
		Float$(OBJEXT) \
		Math$(OBJEXT) \
		Object$(OBJEXT) \
		Runtime$(OBJEXT) \
		SecurityManager$(OBJEXT) \
		String$(OBJEXT) \
		System$(OBJEXT) \
		Thread$(OBJEXT) \
		Throwable$(OBJEXT) \
		UNIXProcess$(OBJEXT) \
		CharToByteDefault$(OBJEXT) \
		ByteToCharDefault$(OBJEXT) \
		ZipFile$(OBJEXT)

OBJECT.LANG.REFLECT=\
		Array$(OBJEXT) \
		Constructor$(OBJEXT) \
		Field$(OBJEXT) \
		Method$(OBJEXT)

OBJECT.TEXT=\
		DateFormat$(OBJEXT)

OBJECT.TEST=\
		TestNative$(OBJEXT)

OBJECT=		$(OBJECT.LANG) $(OBJECT.LANG.REFLECT) \
		$(OBJECT.IO) $(OBJECT.TEXT) $(OBJECT.TEST)

DEPENDS=        $(OBJECT:@OBJEXT@=.d)

all:		$(LLIB)

$(LLIB):	$(LIB)
		rm -f $(LLIB)
		$(LN) $(LIB) $(LLIB)

$(LIB):		$(OBJECT) lib.exp
		@LINKLIB@

.c$(OBJEXT):
		$(CC) $(ALL_CFLAGS) -c $(PIC) $< -o $*.o

wrappers:
		sed -n $(WRAPPER_CMD) *.c > external_wrappers.h
		cat external_wrappers.h.debug >> external_wrappers.h

.SUFFIXES: .d
 
.c.d: 
		$(DEPTOOL) $(ALL_CFLAGS) $< > $@

clean:
		rm -f $(LLIB) $(LIB) $(OBJECT) lib.exp
		rm -f $(DEPENDS) .depend
		touch .depend

distclean:	clean
		rm -f Makefile .depend

install:
		test -d $(INSTROOT)$(libdir) || $(MKDIR) $(INSTROOT)$(libdir)
		$(INSTALL_DATA) $(LIB) $(INSTROOT)$(libdir)/$(LIB)
		rm -f $(INSTROOT)$(libdir)/$(LLIB)
		$(LN) $(LIB) $(INSTROOT)$(libdir)/$(LLIB)

derived-files:	wrappers

depend:		$(DEPENDS)
		rm -f .depend
		cat $(DEPENDS) > .depend

lib.exp:
		$(DLLTOOL) --def $(srcdir)/$(LIBNAME).def --output-exp lib.exp --output-lib $(LIBNAME).a --dllname $(LLIB)
		touch lib.exp

@INC_DEPEND@

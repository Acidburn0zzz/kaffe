AC_INIT(kaffe)
AM_INIT_AUTOMAKE(kaffe, 1.1.x-cvs)

AC_PREFIX_DEFAULT(/usr/local/kaffe)

AM_MAINTAINER_MODE

dnl needed for autoheader to find acconfig.h
AUTOHEADER="$AUTOHEADER --localdir config"

dnl abssrcdir is the absolute path to the source base (regardless of where
dnl you are building it)
case x$srcdir in
x/*)
	abssrcdir=$srcdir
	;;
*)
	abssrcdir=`pwd`/$srcdir
	;;
esac

dnl Setup version number.
KVER=$VERSION

dnl =========================================================================
dnl Allow specification of header-file and library directories
dnl -------------------------------------------------------------------------

AC_ARG_WITH(includes,
  [  --with-includes=dirs    Search specified directories for header files],
  [ CPPFLAGS="$CPPFLAGS"`echo " $withval" |
	sed -e 's/ / -I/g' -e 's/-I //g' -e 's/-I$//'` ],
  [ CPPFLAGS="$CPPFLAGS -I/usr/local/include" ])

AC_ARG_WITH(libraries,
  [  --with-libraries=dirs   Search for libraries in specified directories],
  [ CTLIBS="$CTLIBS"`echo " $withval" |
	sed -e 's/ / -L/g' -e 's/-L //g' -e 's/-L$//'`
    LTLIBS="$LTLIBS"`echo " $withval" |
	sed -e 's/ / -R/g' -e 's/-R //g' -e 's/-R$//'`],
  [ CTLIBS="$CTLIBS -L/usr/local/lib"
    LTLIBS="$LTLIBS -R/usr/local/lib"])

LIBS="$CTLIBS $LIBS"

dnl Find the compiler early on in case we need to override.
AC_PROG_CC

dnl If gcc is the compiler, compile with -Wall for lots of warnings
if test "$GCC" = "yes"; then
	CFLAGS="$CFLAGS -Wall -Wstrict-prototypes"
else
	AC_MSG_ERROR([Kaffe can only build with GCC])
fi

dnl Find the machine type and setup the relevant links
AC_CANONICAL_HOST
AC_EXEEXT

dnl =========================================================================
dnl By default we use dynamic libraries for everything
dnl -------------------------------------------------------------------------

dynamic_libraries=yes
vm_dynamic_library=yes
vm_dynamic_binary=yes

dnl -------------------------------------------------------------------------

dnl =========================================================================
dnl Force use of static libraries
dnl -------------------------------------------------------------------------

AC_ARG_WITH(staticlib,[  --with-staticlib        Force the use of static libraries rather than shared])
if test x"$with_staticlib" = x"yes" ; then
	dynamic_libraries=no
	if test x"${with_staticvm+set}" != x"set"; then
		with_staticvm=yes
	fi
fi

AC_ARG_WITH(staticbin,[  --with-staticbin        Force the the creation of a static virtual machine binary])
if test x"$with_staticbin" = x"yes" ; then
	vm_dynamic_binary=no
	if test x"${with_staticvm+set}" != x"set"; then
		with_staticvm=yes
	fi
fi

AC_ARG_WITH(staticvm,[  --with-staticvm         Force the creation of a static virtual machine])
if test x"$with_staticvm" = x"yes" ; then
	vm_dynamic_library=no
fi

dnl If the vm is static or all libraries are static then make sure we set
dnl the no-share-vmlibrary flag.
if test "$vm_dynamic_library" = "no" || test "$dynamic_libraries" = "no"; then
	AC_DEFINE(NO_SHARED_VMLIBRARY, 1, [If the vm is static or all libraries are static])
fi

dnl =========================================================================
dnl Look for the configuration information
dnl -------------------------------------------------------------------------

known=no
Khost_cpu=$host_cpu
Khost_os=$host_os
if test -f $srcdir/config/config.alias ; then
	. $srcdir/config/config.alias
fi
if test -f $srcdir/config/$Khost_cpu/$Khost_os/config.frag ; then
	known=yes
	. $srcdir/config/$Khost_cpu/$Khost_os/config.frag
fi
if test "$known" = "no" ; then
	AC_MSG_ERROR(Configuration $Khost_cpu-$Khost_os not supported)
fi

dnl =========================================================================

dnl =========================================================================
dnl Configure libtool
dnl -------------------------------------------------------------------------

case "$dynamic_libraries,$vm_dynamic_library" in
no,no) : ${enable_shared=no};;
yes,yes) : ${enable_static=no};;
# otherwise, we have to compile everything twice
esac

AC_LIBTOOL_DLOPEN
AC_LIBLTDL_CONVENIENCE
AC_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(LIBLTDL)
## Let users override the linker used by libtool, but default to $CC.
CCLD=${CCLD:-'$(CC)'}
AC_SUBST(CCLD)

dnl =========================================================================
dnl Do we need underscore?
dnl -------------------------------------------------------------------------

ac_cv_sys_global_symbol_pipe=${ac_cv_sys_global_symbol_pipe-`sed -n '/^global_symbol_pipe=/ s//echo /p' libtool | ${CONFIG_SHELL-/bin/sh}`}
dnl copied from libltdl/configure.in
AC_MSG_CHECKING([for _ prefix in compiled symbols])
AC_CACHE_VAL(ac_cv_sys_symbol_underscore,
[ac_cv_sys_symbol_underscore=no
cat > conftest.$ac_ext <<EOF
void nm_test_func(){}
int main(){nm_test_func;return 0;}
EOF
if AC_TRY_EVAL(ac_compile); then
  # Now try to grab the symbols.
  ac_nlist=conftest.nm
  if AC_TRY_EVAL(NM conftest.$ac_objext \| $ac_cv_sys_global_symbol_pipe \> $ac_nlist) && test -s "$ac_nlist"; then
    # See whether the symbols have a leading underscore.
    if egrep '^. _nm_test_func' "$ac_nlist" >/dev/null; then
      ac_cv_sys_symbol_underscore=yes
    else
      if egrep '^. nm_test_func ' "$ac_nlist" >/dev/null; then
	:
      else
	echo "configure: cannot find nm_test_func in $ac_nlist" >&AC_FD_CC
      fi
    fi
  else
    echo "configure: cannot run $ac_cv_sys_global_symbol_pipe" >&AC_FD_CC
  fi
else
  echo "configure: failed program was:" >&AC_FD_CC
  cat conftest.c >&AC_FD_CC
fi
rm -rf conftest*
])
AC_MSG_RESULT($ac_cv_sys_symbol_underscore)

if test x"$ac_cv_sys_symbol_underscore" = x"yes"; then
    AC_DEFINE(HAVE_UNDERSCORED_C_NAMES, 1, [Define if C symbol names start with underscore])
fi

dnl =========================================================================
dnl Start of default configurations
dnl -------------------------------------------------------------------------

dnl What kind of system are we using?
case $Khost_os in
win32*)
	SYSTEM=win32 ;;
*)
	SYSTEM=unix ;;
esac

dnl -------------------------------------------------------------------------
dnl End of default configurations
dnl =========================================================================

dnl =========================================================================
dnl This is a hack to ease the generation of forward-sources, i.e.,
dnl sources that just #include others, because automake can't use
dnl sources from other directories
dnl -------------------------------------------------------------------------

AC_SUBST(REGEN_FORWARD)
REGEN_FORWARD="\$(top_srcdir)/config/regen-forward"

dnl =========================================================================
dnl Set the base set of platform-dependent files 
dnl One-liners with #include directives will be created in the Makefiles
dnl -------------------------------------------------------------------------

CONFIG_MD_H="\$(srcdir)/$Khost_cpu/$Khost_os/md.h"
KAFFEVM_MD_C="\$(top_srcdir)/config/$Khost_cpu/$Khost_os/md.c"
AC_SUBST(CONFIG_MD_H)
AC_SUBST(KAFFEVM_MD_C)

dnl =========================================================================

dnl =========================================================================
dnl Look for configuration specific Makefile fragement and include it
dnl -------------------------------------------------------------------------

if test -f $srcdir/config/$Khost_cpu/$Khost_os/Make.frag ; then
	cpu_os_frag=$srcdir/config/$Khost_cpu/$Khost_os/Make.frag
else
	cpu_os_frag=/dev/null
fi
if test -f $srcdir/config/$Khost_cpu/Make.frag ; then
	cpu_frag=$srcdir/config/$Khost_cpu/Make.frag
else
	cpu_frag=/dev/null
fi
AC_SUBST_FILE(cpu_os_frag)dnl
AC_SUBST_FILE(cpu_frag)dnl

dnl =========================================================================

dnl =========================================================================
dnl Allow selection of a specific execution engine
dnl -------------------------------------------------------------------------

AC_ARG_WITH(engine,[  --with-engine=ENGINE    Force use given execution engine (intrp, jit, or jit3)])

dnl Translate 'interpreter' to 'intrp'
if test x"$with_engine" = x"interpreter" ; then
	with_engine=intrp
fi

dnl Save the requested engine and set the default to 'jit'
want_engine="$with_engine"
if test x"${with_engine+set}" != x"set" ; then
	with_engine="jit"
fi

dnl -------------------------------------------------------------------------
dnl Check for JIT support and add in the necessary configuration files
dnl -------------------------------------------------------------------------

dnl AC_KAFFE_IF_SUPPORTED_ENGINE(ENGINE, SUP_CMDS, UPDATE_CMDS, UNSUP_CMDS)
dnl If the engine is fully supported, run SUP_CMDS.
dnl If it needs updating, run UPDATE_CMDS.
dnl If it is not supported at all, run UNSUP_CMDS.
AC_DEFUN([AC_KAFFE_IF_SUPPORTED_ENGINE], [
  if test x"$1" = x"intrp"; then
    ifelse([$2],[],[:],[$2])
  else
    if test -f "$srcdir/config/$Khost_cpu/$1-$Khost_cpu.def" && test -f "$srcdir/config/$Khost_cpu/$Khost_os/$1-md.h"; then
      if sed 1q < "$srcdir/config/$Khost_cpu/$Khost_os/$1-md.h" |
	 fgrep "Needs update, do not use" > /dev/null; then
	ifelse([$3],[],[:],[$3])
      else
	ifelse([$2],[],[:],[$2])
      fi
    else
      ifelse([$4],[],[:],[$4])
    fi
  fi
])

dnl If they request a specific engine, we must support it or else fail
dnl Otherwise, pick the most preferable supported engine. Note that
dnl the "intrp" engine is always supported, so we can't fail there.

if test x"${want_engine}" != x""; then
	AC_KAFFE_IF_SUPPORTED_ENGINE([${want_engine}],,
		[AC_MSG_WARN([The $want_engine engine was not updated for $Khost_cpu-$Khost_os])], 
		[AC_MSG_ERROR([Configuration $Khost_cpu-$Khost_os does not support the $want_engine engine])])
	with_engine="${want_engine}"
else
	for engine in jit3 jit intrp; do
		AC_KAFFE_IF_SUPPORTED_ENGINE([${engine}], [
			with_engine="${engine}"
			break;
		])
	done
fi

if test x"$with_engine" != x"intrp" ; then
    HAVE_CONFIG_JIT_MD_H=1
    CONFIG_JIT_MD_H="\$(top_srcdir)/config/$Khost_cpu/$Khost_os/$with_engine-md.h"
    AC_SUBST(CONFIG_JIT_MD_H)
    KAFFEVM_JIT_DEF="\$(top_srcdir)/config/$Khost_cpu/$with_engine-$Khost_cpu.def"
    AC_SUBST(KAFFEVM_JIT_DEF)
    KAFFEVM_ICODE_H="\$(top_srcdir)/config/$Khost_cpu/$with_engine-icode.h"
    AC_SUBST(KAFFEVM_ICODE_H)
else
    HAVE_CONFIG_JIT_MD_H=0
fi

AC_SUBST(HAVE_CONFIG_JIT_MD_H)

AC_MSG_CHECKING(execution engine)
AC_MSG_RESULT($with_engine)
AM_CONDITIONAL(USE_JIT, test x"$with_engine" != x"intrp")

ENGINE_NAME="$with_engine"
AC_SUBST(ENGINE_NAME)

AC_SUBST_FILE(engine_frag)dnl
engine_frag=$srcdir/kaffe/kaffevm/$with_engine/Makefile.frag

dnl =========================================================================
dnl Allow selection of debugging mechanisms
dnl -------------------------------------------------------------------------

AC_ARG_ENABLE(debug,[  --enable-debug          Enable run-time debugging machinery
  --disable-debug         Disable assertion checking (but not -g)])
case "$enable_debug" in
"") ;;
no) CPPFLAGS="$CPPFLAGS -DNDEBUG";;
*) CPPFLAGS="$CPPFLAGS -DDEBUG";;
esac

dnl =========================================================================
dnl Allow support for profiling of C/jitted code
dnl -------------------------------------------------------------------------

need_libxprof=no

AC_ARG_ENABLE(xprofiling,[  --enable-xprofiling     Enable profiling for C and jitted code])
case "$enable_xprofiling" in
"") xprofiling=no ;;
no) xprofiling=no ;;
*)  xprofiling=yes; need_libxprof=yes; CPPFLAGS="$CPPFLAGS -DKAFFE_XPROFILER";;
esac
dnl ENABLE_XPROF controls installation of xprof scripts in kaffe/scripts/Makefile.am
AM_CONDITIONAL(ENABLE_XPROF, test x"$enable_xprofiling" = x"yes")

if test x"$enable_xprofiling" = x"yes"; then
  if test -f "$srcdir/config/$Khost_cpu/$Khost_os/xprofile-md.h"; then
    CONFIG_XPROFILE_MD_H="\$(top_srcdir)/config/$Khost_cpu/$Khost_os/xprofile-md.h"
    AC_SUBST(CONFIG_XPROFILE_MD_H)
  else
    AC_MSG_ERROR(Profiling not supported in $Khost_cpu-$Khost_os)
  fi
fi

dnl =========================================================================
dnl Allow support for debugging of C/jitted code
dnl -------------------------------------------------------------------------

AC_ARG_ENABLE(xdebugging,[  --enable-xdebugging     Enable debugging symbol generation for jitted code])
case "$enable_xdebugging" in
"") ;;
no) ;;
*) need_libxprof=yes; CPPFLAGS="$CPPFLAGS -DKAFFE_XDEBUGGING";;
esac

dnl =========================================================================
dnl Allow generation feedback data
dnl -------------------------------------------------------------------------

AC_ARG_ENABLE(feedback,[  --enable-feedback       Enable generation of feedback data])
case "$enable_feedback" in
"") ;;
no) ;;
*) need_libxprof=yes; CPPFLAGS="$CPPFLAGS -DKAFFE_FEEDBACK";;
esac

AM_CONDITIONAL(NEED_LIBXPROF, test x"$need_libxprof" = x"yes")

dnl =========================================================================
dnl Allow enabling of profiling
dnl -------------------------------------------------------------------------

AC_ARG_WITH(profiling,[  --with-profiling        Compile with gprof(1) profiling support])

AC_MSG_CHECKING(gprof(4) profiling support)
if test x"${with_profiling}" = x"yes" ; then
	CFLAGS="$CFLAGS -pg"
	CPPFLAGS="$CPPFLAGS -DKAFFE_CPROFILER"
else
	with_profiling=no
fi
AC_MSG_RESULT($with_profiling)

dnl =========================================================================
dnl Do we include our Sun compatibility scripts?
dnl -------------------------------------------------------------------------

AC_ARG_WITH(suncompat,[  --without-suncompat     Don't include Sun compatibility scripts])
AC_MSG_CHECKING(sun compatibility mode)
if test x"${with_suncompat+set}" != x"set" ; then
	with_suncompat=yes
fi
AM_CONDITIONAL(SUN_COMPAT, test x"$with_suncompat" = x"yes")
AC_MSG_RESULT($with_suncompat)

dnl =========================================================================
dnl Use the new internal threading system "jthreads"
dnl -------------------------------------------------------------------------

AC_ARG_WITH(threads,[  --with-threads=SYSTEM   Define which threading system to use])
AC_MSG_CHECKING(thread system)
if test x"$with_threads" = x"" ; then
	with_threads=unix-jthreads
fi
if test ! -d $srcdir/kaffe/kaffevm/systems/${with_threads} ; then
	AC_MSG_ERROR(Configuration $Khost_cpu-$Khost_os does not support $with_threads threads)
fi
THREAD_SYSTEM=$with_threads
AC_MSG_RESULT($THREAD_SYSTEM)
AC_SUBST_FILE(threads_frag)dnl
threads_frag=$srcdir/kaffe/kaffevm/systems/$with_threads/Makefile.frag
AC_SUBST(THREAD_DIR)
THREAD_DIR=systems/$with_threads

dnl =========================================================================
dnl Look for trampoline code if in JIT mode
dnl -------------------------------------------------------------------------
KAFFEVM_TRAMPOLINES_C=
if test "$with_engine" != "intrp" ; then
	AC_MSG_CHECKING(for trampolines)
	if test -f $srcdir/config/$Khost_cpu/trampolines.c ; then
		KAFFEVM_TRAMPOLINES_C="\$(top_srcdir)/config/$Khost_cpu/trampolines.c"
		AC_SUBST(KAFFEVM_TRAMPOLINES_C)
		AC_MSG_RESULT(yes)
	else
		AC_MSG_ERROR(does not support trampolines - now mandatory)
	fi
fi

dnl =========================================================================
dnl Set install root directory which prefixes all install target dirs
dnl -------------------------------------------------------------------------

if test x"$with_installroot" != x""; then
    AC_MSG_ERROR([--with-installroot is deprecated, use \`make install DESTDIR=...'])
fi

dnl =========================================================================

dnl =========================================================================
dnl Make the necessary substitutions
dnl -------------------------------------------------------------------------

AC_SUBST(KVER)
AC_SUBST(JAVA_LIBS)
AC_SUBST(with_engine)
AC_SUBST(THREAD_SYSTEM)
AC_DEFINE_UNQUOTED(KAFFEVERSION, "$KVER", [Kaffe version number])
if test "$program_prefix" = "NONE" ; then
	KPREFIX=""
else
	KPREFIX=$program_prefix
fi
AC_SUBST(KPREFIX)
KAFFE_ARCHOS="$Khost_cpu-$Khost_os"
AC_DEFINE_UNQUOTED(ARCHOS, "$KAFFE_ARCHOS", [Define the version we're compiling for])
AC_SUBST(KAFFE_ARCHOS)

dnl =========================================================================

dnl =========================================================================
dnl Checks for programs.
dnl -------------------------------------------------------------------------

AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_CHECK_PROG(JIKES, jikes, jikes)
AC_CHECK_PROG(ZIP, zip, zip)

dnl If symlink is overridden then don't bother with the test.
if test "$LN_S" = "" ; then
	AC_PROG_LN_S
fi
dnl This shell macro caches uses of ln -s in the generated script and
dnl converts them to LN_S
ln() {
	if test "$1" = "-s" ; then
		$LN_S $2 $3
	else
		ln $1 $2
	fi
}

dnl =========================================================================
dnl Checks for types
dnl -------------------------------------------------------------------------

AC_CHECK_SIZEOF(short,0)
AC_CHECK_SIZEOF(int,0)
AC_CHECK_SIZEOF(long,0)
AC_CHECK_SIZEOF(long long,0)
AC_CHECK_SIZEOF(__int64,0)
AC_CHECK_SIZEOF(void*,0)

dnl =========================================================================
dnl Checks for alignments
dnl -------------------------------------------------------------------------

AC_CACHE_CHECK(alignment of void*, ac_cv_alignmentof_voidp,
AC_TRY_RUN([#include <stdio.h>
main() { struct { char c; void *p; } t; FILE *f;
  if ((char*) &t.c != (char*) &t)  exit (1);
  f=fopen ("conftestdata", "w");
  if (! f)                         exit (1);
  fprintf (f, "%d", ((char*) &t.p)-((char*) &t));
  fclose(f); exit (0); }],
ac_cv_alignmentof_voidp=`cat conftestdata`, AC_MSG_ERROR([Unexpected result]),
ac_cv_alignmentof_voidp=$ac_cv_sizeof_voidp))
AC_DEFINE_UNQUOTED(ALIGNMENTOF_VOIDP,$ac_cv_alignmentof_voidp, [How are pointers aligned])

dnl -------------------------------------------------------------------------

AC_TYPE_SIGNAL

AC_CACHE_CHECK([whether signal handlers are one-shot],
	kaffe_cv_signal_one_shot, [ dnl
	AC_TRY_RUN([
#include <signal.h>
int counter = 0;
RETSIGTYPE hup_handler () { ++counter; }
int get_counter () { return counter; }
int main() {
  signal(1, hup_handler);
  kill(getpid(), 1);
  if (get_counter() == 0)
    exit(1); /* signal was not delivered, can't test reliably */
  kill(getpid(), 1);
  if (get_counter() != 2)
    exit(1); /* signal was not delivered, seems to be one-shot */
  exit(0);
}
], kaffe_cv_signal_one_shot=no, kaffe_cv_signal_one_shot=yes,
	kaffe_cv_signal_one_shot=cross)
])
if test "$kaffe_cv_signal_one_shot" != "no"; then
  AC_DEFINE(KAFFE_SIGNAL_ONE_SHOT, 1, [Define if signal handlers must be reset upon delivery])
fi

AC_TYPE_SIZE_T
pushdef([AC_DEFINE_SAVED],defn([AC_DEFINE]))
pushdef([AC_DEFINE],[AC_DEFINE_SAVED([$1],[$2],[Define to $2 if $1 is not defined])])
AC_CHECK_TYPE(ssize_t, int)
popdef([AC_DEFINE])
popdef([AC_DEFINE_SAVED])

dnl -------------------------------------------------------------------------

AC_DEFUN(AC_CHECK_LIBRARY, [dnl
KSAVE_LIBS="$LIBS"
LIBS="$$3 $KSAVE_LIBS"
AC_CHECK_LIB($1,$2)
$3=`echo "$LIBS" | sed "s% $KSAVE_LIBS$%%"`
LIBS="$KSAVE_LIBS"
])

dnl =========================================================================
dnl Checks for libraries
dnl -------------------------------------------------------------------------

dnl Libraries for programs such as Kaffe and kaffeh

KAFFE_LIBS="$KAFFE_LIBS"
AC_SUBST(KAFFE_LIBS)

dnl Checks for general math libraries

AC_CHECK_LIBRARY(mw,_mwvalidcheckl,M_LIBS)
AC_CHECK_LIBRARY(m,sin,M_LIBS)

AC_SUBST(M_LIBS)

dnl If there is no native sysdepCallMethod, let's use libffi

AC_ARG_WITH(libffi,[  --with-libffi           Use libffi for sysdepCallMethod])
if test x"$with_libffi" = x"yes" ; then
	AC_CHECK_LIBRARY(ffi,ffi_call,VM_LIBS)
	if test $ac_cv_lib_ffi_ffi_call = no; then
		AC_MSG_ERROR([Missing library libffi, read FAQ/FAQ.libffi])
	fi
fi

dnl Checks for libraries for vm library.
dnl Include work around FreeBSD modulo bug.

case "$Khost_os" in
freebsd2|oskit)
	AC_CHECK_LIBRARY(gcc,__moddi3,VM_LIBS);;
esac

AC_SUBST(VM_LIBS)

dnl Check for libraries for native library.
dnl None required.

dnl Check for libraries for net library.
AC_CHECK_FUNC(gethostname)
if test $ac_cv_func_gethostname = no; then
      AC_CHECK_LIBRARY(nsl, gethostname, NET_LIBS)
fi
AC_CHECK_FUNC(gethostbyname)
if test $ac_cv_func_gethostbyname = no; then
      AC_CHECK_LIBRARY(nsl, gethostbyname, NET_LIBS)
fi
AC_CHECK_FUNC(connect)
if test $ac_cv_func_connect = no; then
  AC_CHECK_LIBRARY(socket, connect, NET_LIBS)
fi
AC_SUBST(NET_LIBS)

dnl Check for libraries for zip library.
AC_CHECK_LIBRARY(z,deflate,ZIP_LIBS)
ZIP_LIBS="$CTLIBS $ZIP_LIBS"
AC_SUBST(ZIP_LIBS)

dnl Check for libraries for math library.
AC_CHECK_LIBRARY(gmp,mpz_get_d,MATH_LIBS)
if test $ac_cv_lib_gmp_mpz_get_d = no; then
  dnl with gmp3 it's a #define, use real function name
  AC_CHECK_LIBRARY(gmp,__gmpz_get_d,MATH_LIBS)
fi
MATH_LIBS="$CTLIBS $MATH_LIBS"
AC_SUBST(MATH_LIBS)

dnl Check for libraries for security library.
AC_CHECK_FUNCS(MD2Init MD4Init MD5Init)
if test $ac_cv_func_MD5Init = no; then
  AC_CHECK_LIBRARY(md, MD5Init, SECURITY_LIBS)
fi
SECURITY_LIBS="$CTLIBS $SECURITY_LIBS"
AC_SUBST(SECURITY_LIBS)

dnl Check for thread libraries
if test x$with_threads = xunix-pthreads ; then
	AC_CHECK_LIBRARY(pthread,pthread_create,VM_LIBS)
	if test $ac_cv_lib_pthread_pthread_create = no; then
		AC_MSG_ERROR([Missing library libpthread, read FAQ/FAQ.pthreads])
	fi
fi

dnl Checks for libraries for X related libraries.
AC_PATH_XTRA
if test x"$no_x" = x"yes"; then
  AWT_LIBS=
else
  dnl Csup is needed for IRIX libraries such as libjpeg and libpng
  dnl Instead of adding it to both JPEG_LIBS and PNG_LIBS, use X_LIBS
  AC_CHECK_LIBRARY(Csup,__T_9__nothrow,X_LIBS)
  OLIBS=$LIBS
  LIBS="$ZIP_LIBS $M_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS $OLIBS"
  AC_CHECK_LIBRARY(Xext,XShmQueryExtension,X_PRE_LIBS)
  OCPPFLAGS=$CPPFLAGS
  CPPFLAGS="$CPPFLAGS $X_CFLAGS"
  AC_CHECK_HEADERS(sys/ipc.h sys/shm.h X11/extensions/XShm.h)
  CPPFLAGS=$OCPPFLAGS	
  LIBS="$ZIP_LIBS $M_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS $OLIBS"
  AC_CHECK_LIBRARY(jpeg,jpeg_read_header,JPEG_LIBS)
  AC_CHECK_LIBRARY(png,png_create_info_struct,PNG_LIBS)
  AC_CACHE_CHECK([for a usable version of gif_lib.h],
    kaffe_cv_gif_lib_version, [dnl
	AC_TRY_COMPILE([
#include <gif_lib.h>
], [
	((GifFileType *)0)->UserData;
], [kaffe_cv_gif_lib_version=yes],
   [kaffe_cv_gif_lib_version=no])])
  if test x"$kaffe_cv_gif_lib_version" = x"yes"; then
    AC_DEFINE(HAVE_GIF_LIB_H, 1, [Do we have the right version of libungif])
    AC_CHECK_LIBRARY(ungif,DGifOpen,GIF_LIBS)
  fi

  LIBS=$OLIBS
  dnl If libpng is included, we also need libz - if we don't have it then
  dnl we can't include png support.
  if test -n "$PNG_LIBS" && test -n "$ZIP_LIBS"; then
    PNG_LIBS="$PNG_LIBS $ZIP_LIBS $M_LIBS"
  else
    PNG_LIBS=""
  fi

  dnl For each -L switch in X_LIBS, add a corresponding -R, unless
  dnl AC_PATH_XTRA has already taken care of them.
  case "$X_LIBS" in
  "-R"* | *" -R"*) ;;
  "-L"* | *" -L"*)
    for ac_xlibdir in $X_LIBS; do
      case "$ac_xlibdir" in
      -L*) X_LIBS="$X_LIBS "`echo "$ac_xlibdir" | sed 's/^-L/-R/'`;;
      esac
    done ;;
  esac

  AWT_LIBS="$JPEG_LIBS $PNG_LIBS $GIF_LIBS $X_LIBS $X_PRE_LIBS -lX11 $X_EXTRA_LIBS"
  AWT_LIBS="$CTLIBS $AWT_LIBS"
  AC_SUBST(AWT_LIBS)
fi

dnl -------------------------------------------------------------------------

dnl =========================================================================
dnl Checks for header files.
dnl -------------------------------------------------------------------------

AC_HEADER_STDC
AC_CHECK_HEADERS(\
alloca.h \
dnl GNU/Linux sigcontext headers
asm/sigcontext.h asm/signal.h \
bsd/libc.h \
dl.h \
dlfcn.h \
fcntl.h \
features.h \
gmp.h \
iconv.h \
jpeglib.h \
kernel/OS.h \
mach-o/rld.h \
malloc.h \
memory.h \
netdb.h \
netinet/in.h \
netinet/in_systm.h \
netinet/tcp.h \
png.h \
poll.h \
pwd.h \
sigcontext.h \
signal.h \
stdlib.h \
string.h \
sys/filio.h \
sys/ioctl.h \
sys/param.h \
sys/poll.h \
sys/select.h \
sys/socket.h \
sys/stat.h \
sys/time.h \
sys/types.h \
sys/utsname.h \
sys/wait.h \
time.h \
unistd.h \
utime.h \
dnl windows headers
winbase.h windows.h winnt.h winsock.h wintypes.h wtypes.h \
zlib.h)

AC_HEADER_DIRENT

dnl We need both getrusage and the header containing its decls.
have_rusage=no
AC_CHECK_HEADERS(sys/resource.h, AC_CHECK_FUNCS(getrusage, have_rusage=yes))

dnl =========================================================================
dnl Do we build a vm that collects statistics?
dnl -------------------------------------------------------------------------

AC_ARG_WITH(stats,[  --with-stats            Gather statistics on vm execution])

if test "$with_stats" = "yes" ; then
	if test $have_rusage = "no" ; then
		echo "Need rusage to build stats version"
	else
		AC_DEFINE(KAFFE_STATS, 1, [Do we enable stats in the vm?])
	fi
fi

dnl -------------------------------------------------------------------------

dnl =========================================================================
dnl Do we enable GCJ support
dnl -------------------------------------------------------------------------

if test "x$enable_gcj" = "xyes"; then
  enable_gcj=no # pessimist

  have_recent_gcc=yes # optimist
  AC_CHECK_FUNCS([__throw __terminate_func __get_eh_info], [],
		 [have_recent_gcc=no])
  pushdef([AC_MSG_ERROR], [have_recent_gcc=no])
  AC_PROG_CXX
  popdef([AC_MSG_ERROR])

  if test "x$have_recent_gcc" = xyes; then
    AC_LANG_SAVE
    AC_LANG_CPLUSPLUS
    AC_CHECK_HEADER([java/lang/Class.h],
      [have_libgcj_headers=yes], [have_libgcj_headers=no])
    AC_LANG_RESTORE

    if test "x$have_libgcj_headers" = xyes; then
      enable_gcj=yes
      AC_DEFINE([HAVE_GCJ_SUPPORT], 1, [Enable GCJ support. ])
      CFLAGS="$CFLAGS -fexceptions"
    fi
  fi
fi

AC_ARG_ENABLE(gcj,[  --enable-gcj            Enable GCJ support])
AC_MSG_CHECKING([whether to enable GCJ support])
AC_MSG_RESULT($enable_gcj)
AM_CONDITIONAL(HAVE_GCJ_SUPPORT, test "$enable_gcj" = "yes")

dnl -------------------------------------------------------------------------

dnl =========================================================================
dnl Do we disable MIPS LL/SC (MIPS II instructions)
dnl -------------------------------------------------------------------------

AC_ARG_ENABLE(mips2, [  --disable-mips2         Disable MIPS II instructions])
AC_MSG_CHECKING([whether to enable MIPS II instructions])
if test "x$enable_mips2" != "xno"; then
    AC_DEFINE([HAVE_MIPSII_INSTRUCTIONS], 1, [Enable MIPS II instructions])
fi
AC_MSG_RESULT($enable_mips2)

dnl -------------------------------------------------------------------------

dnl =========================================================================
dnl Checks for typedefs, structures, and compiler characteristics.
dnl -------------------------------------------------------------------------

AC_HEADER_TIME
AC_STRUCT_TM
AC_STRUCT_TIMEZONE
AC_C_BIGENDIAN
AC_C_CHAR_UNSIGNED
AC_C_INLINE

dnl =========================================================================
dnl Check for [u]int{8,16,32,64} and bool.
dnl -------------------------------------------------------------------------

if test x"$ac_cv_typedef_int8" = xyes; then
  AC_DEFINE(HAVE_INT8, 1, [Do we have int8])
fi

if test x"$ac_cv_typedef_uint8" = xyes; then
  AC_DEFINE(HAVE_UINT8, 1, [Do we have uint8])
fi

if test x"$ac_cv_typedef_int16" = xyes; then
  AC_DEFINE(HAVE_INT16, 1, [Do we have int16])
fi

if test x"$ac_cv_typedef_uint16" = xyes; then
  AC_DEFINE(HAVE_UINT16, 1, [Do we have uint16])
fi

if test x"$ac_cv_typedef_int32" = xyes; then
  AC_DEFINE(HAVE_INT32, 1, [Do we have int32])
fi

if test x"$ac_cv_typedef_uint32" = xyes; then
  AC_DEFINE(HAVE_UINT32, 1, [Do we have uint32])
fi

if test x"$ac_cv_typedef_int64" = xyes; then
  AC_DEFINE(HAVE_INT64, 1, [Do we have int64])
fi

if test x"$ac_cv_typedef_uint64" = xyes; then
  AC_DEFINE(HAVE_UINT64, 1, [Do we have uint64])
fi

if test x"$ac_cv_typedef_bool" = xyes; then
  AC_DEFINE(HAVE_BOOL, 1, [Do we have bool])
fi

dnl =========================================================================
dnl Check for struct sigcontext.
dnl -------------------------------------------------------------------------

AC_CACHE_CHECK([for struct sigcontext],
  ac_cv_struct_sigcontext,
[AC_TRY_COMPILE([#include <asm/signal.h>
#include <asm/sigcontext.h>], 
[struct sigcontext t;],
  ac_cv_struct_sigcontext=yes, ac_cv_struct_sigcontext=no)])
if test $ac_cv_struct_sigcontext = yes; then
  AC_DEFINE(HAVE_STRUCT_SIGCONTEXT, 1, [Do we have sigcontext])
fi

dnl Check for struct sigcontext_struct.
dnl Just to complicate things there are two different sets of assembly files
dnl we must check which are mutually incompatible.

AC_CACHE_CHECK([for struct sigcontext_struct (without asm/sigcontext.h)],
  ac_cv_struct_sigcontext_struct,
[AC_TRY_COMPILE([#include <asm/signal.h>],
[struct sigcontext_struct t;],
  ac_cv_struct_sigcontext_struct=yes, ac_cv_struct_sigcontext_struct=no)])

AC_CACHE_CHECK([for struct sigcontext_struct (with asm/sigcontext.h)],
  ac_cv_struct_sigcontext_struct_with,
[AC_TRY_COMPILE([#include <asm/signal.h>
#include <asm/sigcontext.h>], 
[struct sigcontext_struct t;],
  ac_cv_struct_sigcontext_struct_with=yes, ac_cv_struct_sigcontext_struct_with=no)])

if test $ac_cv_struct_sigcontext_struct = yes -o $ac_cv_struct_sigcontext_struct_with = yes; then
  AC_DEFINE(HAVE_STRUCT_SIGCONTEXT_STRUCT, 1, [Do we have sigcontext_struct])
fi

dnl -------------------------------------------------------------------------

dnl =========================================================================
dnl Checks for library functions.
dnl -------------------------------------------------------------------------

AC_FUNC_STRFTIME
AC_FUNC_MMAP
AC_CHECK_FUNCS([dnl
select socket getsockname getpagesize dnl
memcpy memmove dnl
mkdir dnl
getcwd chdir getwd gettimeofday ftime time uname getuid dnl
localtime dnl
iconv dnl
])

KSAVE_LIBS="$LIBS"
LIBS="$M_LIBS $LIBS"
AC_CHECK_FUNCS(remainder remainderf fmod fmodf drem rint floor ceil finite isinf isnan strtod mergesort)
LIBS="$KSAVE_LIBS"

dnl Test whether LONG_MIN / -1l crashes
AC_CACHE_CHECK([whether long division is broken],
  ac_cv_long_division_broken, [dnl
    AC_TRY_RUN([
#include <limits.h>
#define T long
#ifndef LONG_MIN
# define LONG_MIN ((((unsigned T)(~(T)0))>>1)+1)
#endif
T foo(T i, T j);
int main() { return foo(LONG_MIN, -1l) && 1; }
T foo(T i, T j) { return i / j; }
], ac_cv_long_division_broken=no, ac_cv_long_division_broken=yes,
   ac_cv_long_division_broken=cross)])
if test x"$ac_cv_long_division_broken" = x"yes"; then
  AC_DEFINE(LONG_DIVISION_BROKEN, 1, [Define if LONG_MIN / -1l produces an arithmetic exception])
fi

dnl Test whether LONG_MIN % -1l crashes
AC_CACHE_CHECK([whether long modulo is broken],
  ac_cv_long_modulo_broken, [dnl
    AC_TRY_RUN([
#include <limits.h>
#define T long
#ifndef LONG_MIN
# define LONG_MIN ((((unsigned T)(~(T)0))>>1)+1)
#endif
T foo(T i, T j);
int main() { return foo(LONG_MIN, -1l) && 1; }
T foo(T i, T j) { return i % j; }
], ac_cv_long_modulo_broken=no, ac_cv_long_modulo_broken=yes,
   ac_cv_long_modulo_broken=cross)])
if test x"$ac_cv_long_modulo_broken" = x"yes"; then
  AC_DEFINE(LONG_MODULO_BROKEN, 1, [Define if LONG_MIN % -1l produces an arithmetic exception])
fi

dnl Test whether LONG_LONG_MIN % -1ll crashes
AC_CACHE_CHECK([whether long long modulo is broken],
  ac_cv_long_long_modulo_broken, [dnl
    AC_TRY_RUN([
#include <limits.h>
#define T long long
#ifndef LONG_LONG_MIN
# define LONG_LONG_MIN ((((unsigned T)(~(T)0))>>1)+1)
#endif
T foo(T i, T j);
int main() { return foo(LONG_LONG_MIN, -1ll) && 1; }
T foo(T i, T j) { return i % j; }
], ac_cv_long_long_modulo_broken=no, ac_cv_long_long_modulo_broken=yes,
   ac_cv_long_long_modulo_broken=cross)])
if test x"$ac_cv_long_long_modulo_broken" = x"yes"; then
  AC_DEFINE(LONG_LONG_MODULO_BROKEN, 1, [Define if LONG_LONG_MIN % -1ll produces an arithmetic exception])
fi

dnl Test whether strtod("-0.0") is broken
AC_CACHE_CHECK([whether strtod(\"-0.0\") is broken],
  ac_cv_strtod_m0_broken, [dnl
    AC_TRY_RUN([
#include <stdlib.h>
/* definition DOUBLE_ORDER_OPPOSITE from config/config-hacks.h */
#if defined(arm32) || (defined(arm) && defined(linux))
#define DOUBLE_ORDER_OPPOSITE
#endif
/* definition of uint32 from kaffe/kaffevm/gtypes.h */
#if SIZEOF_INT == 4
#define uint32	unsigned int
#elif SIZEOF_LONG == 4
#define uint32	unsigned long
#else
#define uint32	int
#endif
/* definition of uint64 from kaffe/kaffevm/gtypes.h */
#if SIZEOF_LONG == 8
#define uint64	unsigned long
#elif SIZEOF_LONG_LONG == 8
#define uint64	unsigned long long
#elif SIZEOF___INT64 == 8
#define uint64	unsigned __int64
#else
#define uint64	int
#endif
int main()
{
    union { double d; uint32 i; uint64 j; } d;
    if (sizeof(uint64) != 8) return 2;
#if defined(HAVE_STRTOD)
    d.d = strtod("-0.0", 0);
#else
    d.d = atof("-0.0");
#endif
    /* doubleToLong() from kaffe/kaffevm/fp.c */
#if defined(DOUBLE_ORDER_OPPOSITE)
    {
	/* swap low and high word */
	uint32 r = *(uint32*)&d.j;
	uint32 *s = (uint32*)&d.j + 1;
	d.i = *s;
	*s = r;
    }
#endif
    if ((d.j >> 63) & 1) return 0; else return 1;
}
], ac_cv_strtod_m0_broken=no, ac_cv_strtod_m0_broken=yes,
   ac_cv_strtod_m0_broken=cross)])
if test x"$ac_cv_strtod_m0_broken" = x"yes"; then
  AC_DEFINE(STRTOD_m0_BROKEN, 1, [Define if strtod(\"-0.0\") is broken])
fi

AC_CHECK_FUNCS([dnl
strerror hstrerror dnl
fcntl ioctl dnl
alarm setitimer dnl
sigprocmask sigsetmask sigemptyset sigaddset signal sigaction dnl
sbrk valloc memalign mallopt dnl
mprotect madvise dnl
waitpid kill fork execve execvp dnl
sync fsync dnl
atexit on_exit vsnprintf snprintf dnl
])

if test "$Khost_cpu" = "alpha" ; then
  AC_CACHE_CHECK([for alpha support of amask instruction],
    ac_cv_alpha_asm_amask,
  [AC_TRY_COMPILE(, [ long r; __asm__("amask 1,%0" : "=r"(r)); return !r; ],
    ac_cv_alpha_asm_amask=yes, ac_cv_alpha_asm_amask=no)
  ])
  if test "$ac_cv_alpha_asm_amask" = "yes" ; then
    AC_DEFINE(HAVE_ALPHA_ASM_AMASK, 1, [Do we have amask instruction on alpha])
  fi
fi

dnl -------------------------------------------------------------------------

dnl =========================================================================
dnl Work out if select is declared
dnl -------------------------------------------------------------------------

AC_CACHE_CHECK([for declaration of select],
  ac_cv_declared_select,
[AC_TRY_COMPILE([
#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif
#ifdef HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#ifdef HAVE_SYS_SELECT_H
#include <sys/select.h>
#endif
], [ void *foo = select; ],
  ac_cv_declared_select=yes, ac_cv_declared_select=no)
])
if test "x$ac_cv_declared_select" = "xyes"; then
  AC_DEFINE(HAVE_DECLARED_SELECT, 1, [Is function select declared])
fi

dnl =========================================================================
dnl Work out if swab is declared
dnl -------------------------------------------------------------------------

AC_CACHE_CHECK([for declaration of swab],
  ac_cv_declared_swab,
[AC_TRY_COMPILE([
#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif
#ifdef HAVE_STDLIB_H
#include <stdlib.h>
#endif
], [ void *foo = swab; ],
  ac_cv_declared_swab=yes, ac_cv_declared_swab=no)
])
if test "x$ac_cv_declared_swab" = "xyes"; then
  AC_DEFINE(HAVE_DECLARED_SWAB, 1, [Is function swab declared])
fi

dnl -------------------------------------------------------------------------

dnl If we have X then include AWT support.
if test "$have_x" = "yes" ; then
  AWT_DIR=X
fi

if test x"${AWT_DIR+set}" = x"set"; then
  AWT_LIB="\$(top_builddir)/libraries/clib/awt/$AWT_DIR/libawt.la"
else
  AWT_DIR=
  AWT_LIB=
fi

AC_SUBST(AWT_DIR)

JAVA_LIBS=" \
\$(top_builddir)/libraries/clib/native/libnative.la \
\$(top_builddir)/libraries/clib/net/libnet.la \
\$(top_builddir)/libraries/clib/io/libio.la \
\$(top_builddir)/libraries/clib/zip/libzip.la \
\$(top_builddir)/libraries/clib/math/libmath.la \
\$(top_builddir)/libraries/clib/management/libmanagement.la \
\$(top_builddir)/libraries/clib/security/libsecurity.la \
\$(top_builddir)/libraries/extensions/microsoft/clib/libmicrosoft.la \
$AWT_LIB \
$JAVA_LIBS \
"

DLOPEN_JAVA_LIBS=
for lib in $JAVA_LIBS; do
  DLOPEN_JAVA_LIBS="$DLOPEN_JAVA_LIBS -dlopen $lib"
done
AC_SUBST(DLOPEN_JAVA_LIBS)

if test "$dynamic_libraries" = no; then
	KLIBFLAGS=-static
else
	KLIBFLAGS=
fi
AC_SUBST(KLIBFLAGS)

if test "$vm_dynamic_binary" = no; then
	KVMBINFLAGS=-all-static
else
	KVMBINFLAGS=
fi
AC_SUBST(KVMBINFLAGS)

if test "$vm_dynamic_library" = no; then
	KVMLIBFLAGS=-static
else
	KVMLIBFLAGS=
fi
AC_SUBST(KVMLIBFLAGS)

dnl =========================================================================
dnl Set up for local build of kaffeh when cross-compiling
dnl -------------------------------------------------------------------------

if test "$cross_compiling" = yes; then
  dnl check for variables that, if not defined in config.frag or config.cache,
  dnl may take wrong values
  if test x"${ac_cv_c_bigendian+set}" != x"set"; then
    AC_MSG_WARN([when cross compiling, you may want to set ac_cv_c_bigendian to yes or no])
  fi
  if test x"${ac_cv_c_char_unsigned}" != x"set"; then
    AC_MSG_WARN([when cross compiling, you may want to set ac_cv_c_char_unsigned to yes or no])
  fi
  AC_PATH_PROG(KAFFEH, kaffeh)
  if test -z "${KAFFEH}"; then
    AC_MSG_ERROR([please set KAFFEH to the full pathname of a locally executable kaffeh])
  fi
  MAKE_KAFFEH=":"
else
  KAFFEH="\$(top_builddir)/kaffe/kaffeh/kaffeh\$(EXEEXT)"
  MAKE_KAFFEH="cd \$(top_builddir)/kaffe/kaffeh && \$(MAKE)"
fi

dnl KAFFEH is AC_SUBSTed by AC_PATH_PROG
AC_SUBST(MAKE_KAFFEH)

dnl =========================================================================
dnl Define directory to put native library support
dnl -------------------------------------------------------------------------

# We do this hear to because we need prefixes set.
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

toolslibdir=$prefix/lib
AC_SUBST(toolslibdir)

jredir=$prefix/jre
AC_SUBST(jredir)

jrebindir=$jredir/bin
AC_SUBST(jrebindir)

jrelibdir=$jredir/lib
AC_SUBST(jrelibdir)

nativedir=$jredir/lib/$Khost_cpu
AC_SUBST(nativedir)

securitydir=$jredir/lib/security
AC_SUBST(securitydir)

dnl =========================================================================
dnl Define kaffehome.
dnl -------------------------------------------------------------------------

AC_DEFINE_UNQUOTED(DEFAULT_KAFFEHOME, "$jrelibdir", [Define default KAFFEHOME])

dnl -------------------------------------------------------------------------

dnl =========================================================================
dnl Extract path and dir separator information from paths.h
dnl -------------------------------------------------------------------------

AC_REQUIRE([AC_PROG_CPP])

AC_CACHE_CHECK([for path separator],ac_cv_kaffe_pathsep,
[	rm -f conftest.c
	cat ${srcdir}/include/system.h > conftest.c
	echo path_separator >> conftest.c
	eval ac_cv_kaffe_pathsep=`$CPP $CPPFLAGS conftest.c 2>/dev/null| sed '$p; d'`
	rm -f conftest.c
])
PATHSEP=$ac_cv_kaffe_pathsep
AC_SUBST(PATHSEP)

AC_CACHE_CHECK([for directory separator],ac_cv_kaffe_dirsep, 
[	rm -f conftest.c
	cat ${srcdir}/include/system.h > conftest.c
	echo file_separator >> conftest.c
	eval ac_cv_kaffe_dirsep=`$CPP $CPPFLAGS conftest.c 2>/dev/null| sed '$p; d'`
	rm -f conftest.c
])
DIRSEP=`echo "$ac_cv_kaffe_dirsep" | sed 's,\\\\,\\\\\\\\,g'`
AC_SUBST(DIRSEP)

dnl Set up program transform names
kaffe_TRANSF=`echo kaffe | sed ${program_transform_name}`
kaffebin_TRANSF=`echo kaffe-bin | sed "s/${EXEEXT}$//" | sed ${program_transform_name}`
AC_SUBST(kaffe_TRANSF)
AC_SUBST(kaffebin_TRANSF)

dnl These are not to be used during configuration, only during build.
CPPFLAGS="-DKVER='\"\$(KVER)\"' -I$abssrcdir/kaffe/kaffevm -I$abssrcdir/kaffe/kaffevm/systems/$with_threads -I\$(top_srcdir)/config -I\$(top_srcdir)/include $CPPFLAGS"
LIBS="$LIBS $LTLIBS"

dnl Avoid GNU Make $(filter-out -pg,@CFLAGS@) in kaffe/xprof/Makefile.am
CFLAGS_WITHOUT_PG=""
for ac_option in $CFLAGS; do
    if test x"$ac_option" = x"-pg"; then :;
    else
        CFLAGS_WITHOUT_PG="$CFLAGS_WITHOUT_PG $ac_option"
    fi
done
AC_SUBST(CFLAGS_WITHOUT_PG)


AC_CONFIG_SUBDIRS(libltdl)
AM_CONFIG_HEADER(config/config.h include/jtypes.h)
AC_OUTPUT(Makefile \
config/Makefile \
include/Makefile \
kaffe/Makefile \
libraries/Makefile \
kaffe/kaffevm/Makefile \
kaffe/kaffevm/intrp/Makefile \
kaffe/kaffevm/jit/Makefile \
kaffe/kaffevm/jit3/Makefile \
kaffe/kaffevm/gcj/Makefile \
kaffe/kaffevm/systems/Makefile \
kaffe/kaffevm/systems/unix-jthreads/Makefile \
kaffe/kaffevm/systems/oskit-pthreads/Makefile \
kaffe/kaffevm/systems/beos-native/Makefile \
kaffe/kaffevm/systems/unix-pthreads/Makefile \
kaffe/kaffe/Makefile \
kaffe/kaffeh/Makefile \
kaffe/xprof/Makefile \
kaffe/man/Makefile \
kaffe/scripts/Makefile \
kaffe/scripts/bat/Makefile \
kaffe/scripts/compat/Makefile \
libraries/javalib/Makefile \
libraries/clib/Makefile \
libraries/clib/native/Makefile \
libraries/clib/io/Makefile \
libraries/clib/net/Makefile \
libraries/clib/zip/Makefile \
libraries/clib/math/Makefile \
libraries/clib/management/Makefile \
libraries/clib/security/Makefile \
libraries/clib/awt/Makefile \
libraries/clib/awt/X/Makefile \
libraries/extensions/Makefile \
libraries/extensions/comm/Makefile \
libraries/extensions/comm/javalib/Makefile \
libraries/extensions/pjava/Makefile \
libraries/extensions/pjava/javalib/Makefile \
libraries/extensions/servlet/Makefile \
libraries/extensions/servlet/javalib/Makefile \
libraries/extensions/tools/Makefile \
libraries/extensions/tools/javalib/Makefile \
libraries/extensions/microsoft/Makefile \
libraries/extensions/microsoft/javalib/Makefile \
libraries/extensions/microsoft/clib/Makefile \
libraries/extensions/rmi/Makefile \
libraries/extensions/rmi/javalib/Makefile \
kaffe/man/kaffe.1 \
libraries/javalib/rebuildLib \
kaffe/scripts/install-jar \
kaffe/scripts/kaffe \
kaffe/scripts/kaffexprof \
kaffe/scripts/javac \
kaffe/scripts/javakey \
kaffe/scripts/jar \
kaffe/scripts/javap \
kaffe/scripts/jdb \
kaffe/scripts/kjc \
kaffe/scripts/kopi \
kaffe/scripts/javadoc \
kaffe/scripts/appletviewer \
kaffe/scripts/rmic \
kaffe/scripts/rmiregistry \
kaffe/scripts/serialver \
kaffe/scripts/native2ascii \
kaffe/scripts/compat/java \
kaffe/scripts/compat/javac \
kaffe/scripts/compat/appletviewer \
kaffe/scripts/compat/javadoc \
test/Makefile \
test/regression/Makefile \
test/regression/TestScript \
)

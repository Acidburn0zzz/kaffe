dnl Process this file with autoconf to create configure.
dnl Initialize the libltdl package.
AC_INIT(ltdl.c)
AM_INIT_AUTOMAKE(libltdl,0.1)

dnl usage: TEST_VERSION(variable, usable versions,
dnl 			alternate program[, unusable versions])
dnl USABLE and UNUSABLE VERSIONS can be a list of versions separated by `|'
dnl If an unusable version is found, the VARIABLE will be defined to
dnl the alternate program.
dnl Same if the version does not match usable version.
AC_DEFUN(TEST_VERSION, [dnl
test_name=`echo $1 | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
AC_MSG_CHECKING([$test_name version])
changequote(, )dnl
test_version=`(eval ${$1} --version) 2>&1 | sed -e 's/[^ ]* //g' -e 1q`
changequote([, ])dnl
case "$test_version" in
ifelse($#, 4, [$4) $1=$3
   AC_MSG_RESULT([$test_version, rejected, not using]);;
])dnl
""|$2) AC_MSG_RESULT([$test_version, ok]);;
*) $1=$3
   AC_MSG_RESULT([$test_version, too old, not using]);;
esac])

TEST_VERSION(ACLOCAL, 1.3e|1.4, "$missing_dir/missing aclocal")
TEST_VERSION(AUTOCONF, 2.12.2|2.13*, "$missing_dir/missing autoconf")
TEST_VERSION(AUTOMAKE, 1.3e|1.4, "$missing_dir/missing automake")
TEST_VERSION(AUTOHEADER, 2.12.2|2.13*, "$missing_dir/missing autoheader")

AC_ARG_ENABLE(ltdl-install,
  [--enable-ltdl-install     install libltdl])
AM_CONDITIONAL(INSTALL_LTDL, test x$enable_ltdl_install = xyes)
if test x$enable_ltdl_install = xyes; then
  LIBLIBS=libltdl.la
  NOINSTLIBS=
else
  LIBLIBS=
  NOINSTLIBS=libltdl.la
fi
AC_SUBST(LIBLIBS)
AC_SUBST(NOINSTLIBS)

AC_PROG_CC
AM_PROG_LIBTOOL

AC_HEADER_STDC
AC_CHECK_HEADERS(malloc.h memory.h stdlib.h unistd.h stdio.h ctype.h dlfcn.h dl.h)
AC_CHECK_HEADERS(string.h strings.h, break)
AC_CHECK_FUNCS(strdup strchr strrchr index rindex)

AC_CACHE_CHECK([whether libtool supports -dlopen/-dlpreopen],
	libltdl_cv_dlpreopen, [dnl
  if grep '^global_symbol_pipe=..*$' ./libtool >/dev/null; then
    libltdl_cv_dlpreopen=yes
  else
    libltdl_cv_dlpreopen=no
  fi
])
if test x"$libltdl_cv_dlpreopen" = x"yes"; then
  AC_DEFINE(HAVE_DLPREOPEN)
fi

supported=yes
test_dlerror=no
LIBADD_DL=
AC_CHECK_FUNCS(dlopen, [AC_DEFINE(HAVE_LIBDL) test_dlerror=yes],
  [AC_CHECK_LIB(dl, dlopen, [AC_DEFINE(HAVE_LIBDL) LIBADD_DL="-ldl" test_dlerror=yes],
    [AC_CHECK_LIB(dld, dld_link, [AC_DEFINE(HAVE_DLD) LIBADD_DL="-ldld"],
      [AC_CHECK_FUNCS(shl_load, AC_DEFINE(HAVE_SHL_LOAD))]
    )]
  )]
)
AC_SUBST(LIBADD_DL)

if test "$test_dlerror" = yes; then
 LIBS_SAVE="$LIBS"
 LIBS="$LIBS $LIBADD_DL"
 AC_CHECK_FUNCS(dlerror)
 LIBS="$LIBS_SAVE"
fi

AM_SYS_SYMBOL_UNDERSCORE
if test x"$USE_SYMBOL_UNDERSCORE" = xyes; then
  if test x"$ac_cv_func_dlopen" = xyes ||
     test x"$ac_cv_lib_dl_dlopen" = xyes ; then
	AC_CACHE_CHECK([whether we have to add an underscore for dlsym],
		libltdl_cv_need_uscore, [dnl
		AC_TRY_RUN([
#include <dlfcn.h>
#include <stdio.h>
fnord() { int i=42;}
main() { void *self, *ptr1, *ptr2; self=dlopen(0,RTLD_LAZY);
    if(self) { ptr1=dlsym(self,"fnord"); ptr2=dlsym(self,"_fnord");
    if(ptr1 && !ptr2) exit(0); } exit(1); } 
],	libltdl_cv_need_uscore=no, libltdl_cv_need_uscore=yes,
	libltdl_cv_need_uscore=no
)])
  fi
fi

if test x"$libltdl_cv_need_uscore" = xyes; then
  AC_DEFINE(NEED_USCORE)
fi

dnl Output the makefile
AC_OUTPUT(Makefile)

# Local Variables:
# mode:shell-script
# sh-indentation:2
# End:

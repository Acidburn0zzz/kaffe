NOTES ABOUT THE BeOS PORT
=========================
The BeOS port requires BeOS R4 or higher.  It uses its own threading
system designated "beos-native".  The "unix-jthreads" system can be
made to work for the most part; however, that system relies on
asynchronous I/O notifications, as well as virtual timer alarms, both
of which are absent on BeOS R4.

beos-native was modeled upon the oskit-pthreads system, which relies
on mutexes and condition variables.  BeOS has the former, but not the
latter, so I defined a condition variable type based upon an article I
found posted on the Web [1].

To build Kaffe for BeOS, you must configure Kaffe as follows:

	./configure --disable-shared --prefix=<insert-your-prefix-here>

as there is a known problem with building shared libs on R4 (yes, I
realize that the fix is documented in the R4 release notes, but I'll
let someone else muck with the Makefiles accordingly).

As of 19 March 1999, Kaffe has not been built or tested with AWT at all.
Also, the following entry points in the jthread interface have yet to be
implemented:

	jthread_suspendall
	jthread_unsuspendall
	jthread_spinon
	jthread_spinoff

KNOWN PROBLEMS
==============
The jthread interface requires that the macros GET_JTHREAD/SET_JTHREAD
and GET_COOKIE/SET_COOKIE store and retrieve per-thread information.
Right now, this information is maintained in a large BeOS "area" containing
an array of per_thread_info_t structures.  The info for a given thread
with thread id 'T' is simply (T % MAX_THREADS).  Naturally, since
successive calls to spawn_thread (invoked by jthread_create) will not
necessarily yield contiguous thread ids, the maximum number of jthreads
that can be successfully created will be somewhat less than MAX_THREADS.

The implementation of forkexec() in beos-native/syscalls.c makes use of
fork() instead of the recommended technique that uses load_image().

The following tests in the regression test suite currently fail:

	BeanBug:		requires AWT
	ProcessTest:		readline returns null (a)
	SoTimeout:		SO_TIMEOUT socket option unsupported in R4

(a) I suspect that this is due to a shell problem, because the test passes
    if you run it from command-line after substituting "<yourpath>/kaffe"
    for "$JAVA" (see test invocation).

REFERENCES
==========
[1] "Locks and Condition Variables",
    http://www.cs.umd.edu/~hollings/cs412/s96/synch/locks.html

REV HISTORY
===========
27 Jan 99 -- Submitted for inclusion into Kaffe, alanlb@cs.vt.edu
08 Feb 99 -- Fixed various segmentation violations
18 Mar 99 -- Implemented jcondvar_wait timeout, forkexec;
		fixed jthread_interrupt
22 Mar 99 -- Fixed socket read/write in beos-native/syscalls.c, redid
		thread cancellation (i.e., stoppage)

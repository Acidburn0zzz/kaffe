Kaffe has adopted GNU automake to ease the maintenance of Makefiles.
Changes were mostly straightforward, and nothing really important has
changed in the build environment.  I could list a few here:

- using automake means editing Makefile.am instead of Makefile.in, and
that it will take care of rebuilding autoconf/automake-related files
whenever they become out-of-date.

- you also have to specify which files should go in a distribution
(make dist): they should either be listed as sources to some binary or
library or be listed in the EXTRA_DIST variable.  In order to avoid
missing some file, you should run `make distcheck' instead of just
`make dist'.  distcheck runs make dist, builds the dist tree and runs
make check on it.

- since automake doesn't accept sources from other directories,
because this is not portable, I have created some makefiles in
subdirectories such as jit, intrp and system/unix-*.  A special kind
of temporary library, called libtool convenience library, is created
to hold files from each of these directories, and then the convenience
library is included in libkaffevm.  In other cases, such as gc-mem.c,
I have preferred to just create a gc-mem.c forwarder (a file that
#includes mem/gc-mem.c) within kaffe/kaffevm.  If we later decide that
it was not a good idea, it is very easy to create a Makefile.am within
kaffevm/mem and create a convenience library there.

- `make depend' is now implicit, but it only works with gcc and GNU
make.  A distribution file with portable makefiles should be created
with `make dist'

- `make test' is now called `make check', which is much more standard

- in order to modify the Makefiles and configure.in, you need rather
recent versions of autoconf and automake.  autoconf 2.13 (just
released) and automake 1.4 (to be released soon, currently available
via CVS) should be fine.  I'm not sure you really need the newest
automake, but I'm sure that you need at least autoconf 2.12.2 (never
officially released).  automake is supposed to work with perl4, but
some people have reported problems with it.  I'm not sure they have
already been fixed.

  If you don't have recent versions of autoconf/automake and you don't
feel like installing newer ones, your first build should be:

gmake AUTOCONF="./missing autoconf" AUTOMAKE="./missing automake" \
      ACLOCAL="./missing aclocal" AUTOHEADER="./missing autoheader"

so that all autoconf/automake-related files that seem to be
out-of-date are simply touched, instead of rebuilt.

- I added a new flag, --with-staticvm, to make only the VM library
static.  --with-includes and --with-libraries were also introduced, to 
allow the user to specify a list of directories to search for
include-files and libraries.

- you may miss one or other make target that I may have eliminated
from the Makefiles, for example, recursive `make classes' and `make
derived-files'.  It should be straightforward to re-create them within
Makefile.am's, but I'd prefer to avoid these, and create actual
dependencies to ensure that derived files are re-created as needed.

Status
======

last updated 18-dec-2002

- kaffe in interpreter mode currently fails 5 regression tests related to 
  IEEE compliancy. ( See Notes )
- kaffe in jit3 mode currently fails a 27 regression tests since the
  jit is emitting 64 bit floating point instructions that are not supported
  on the PS2. ( see Notes )

Building kaffe on the PS2
=========================

1. install jikes ( version 1.13 was tested )
compiling jikes will take some time on the PS2 but building the
kaffe runtime library with the supplied compiler is a bit of a problem
(and a lot slower than compiling jikes) It is possible to use a more
recent version of jikes, but you will have to manually change the calls
to jikes in libraries/javalib/rebuildLib to avoid class version errors
( add: -source 1.2 to the VERBOSE variable to force jikes to generate
class files compatible with kaffe )

2. run configure to enable jikes and select the interpreter engine:
./configure --with-jikes --with-engine=intrp

Or if you don't need double precision floating point support, you can
build the jit3 version:
./configure --with-jikes

(Remember to run make clean if you change between interpreter and jit! )

3. compile/install in the regular fashion.
make
sudo make install

Notes about the PS2 Linux port
==============================

The ps2 port is a work in progress, it works with the following limitations:

1. Some IEEE constructs are not supported by the FPU: NaN/+Inf/-Inf/+0.0/-0.0
If the PS2 kernel is ever updated to include a FPU emulator to add these missing
constructs, then this port should pass all regression tests.
(This goes for the interpreter as well as for the jit version)

1. jit3 is functional but will cause problems when using double precision floating
point operations. This is because the PS2 lacks a double precsion FPU. If, or when
the linux kernel is updated with a FPU emulator (and a matching gcc is installed) 
to make up for this problem, the port will have to be updated ( the PS2 specific 
patches in config/mips/o32-sysdepCallMethod.h can go away ).

To make sure interpreter bugs don't interfere with building
kaffe on the PS2 use jikes to compile the class library/tests. Some versions
of jikes generate incorrect class files or class files that are too new for
kaffe to handle. Using jikes 1.13 seems to work OK.

The PS2 also lacks the MIPS II "LL" and "SC" instructions. This means
locking is somewhat slower. the MIPS II instructions are disabled in
config/mips/common.h

The PS2 register set is also different from basic mips processors. This means the
FP_OFFSET is much larger ( general purpose registers are 128 bit wide for special
multimedia/vector processing instructions )

Note that the changes in o32-sysdepCallMethod.h pass 64 bit floats in a pair
of general purpose registers. This is the convention gcc uses on the PS2 (
This might be the default for all mips systems that lack these registers, I
don't know...)

Files with PS2 specific changes
===============================
config/mips/o32-sysdepCallMethod.h ( work around lack of 64 bit FPU regs )
config/mips/common.h ( set FP_OFFSET / disable MIPS II instructions )
config/mips/linux/md.h ( FP_OFFSET=36 )

Dylan Schell
dylans@xs4all.nl

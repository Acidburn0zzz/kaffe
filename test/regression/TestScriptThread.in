#! /bin/sh
#
# Perform a standard set of test on the Kaffe system.  This script should
# be built up as we add more test and so, hopefully, avoid re-releasing
# bugs which have been fixed.
#
# This script contains tests for the new internal threading system
#
# Copyright (c) 1996, 1997, 1998, 1999
#	Transvirtual Technologies, Inc.  All rights reserved.
#
# See the file "license.terms" for information on usage and redistribution 
# of this file. 

: ${RESULT=/tmp/kaffer.$$} ${CHECK=/tmp/kaffec.$$}
: ${JAVA=kaffe} ${SRCDIR=@srcdir@} ${PATHSEP='@PATHSEP@'}
test -z "@JIKES@" || : ${JIKES="@JIKES@"}
: ${JAVAC=${JIKES-"$JAVA pizza.compiler.Main"}" -classpath .$PATHSEP$SRCDIR$PATHSEP$SRCDIR/../../libraries/javalib/Klasses.jar$PATHSEP$CLASSPATH"}
overallerror=0
error=0

cd `echo $0 | sed -e 's,^[^/]*$,.,' -e 's,/[^/]*$,,'`

trap "rm -f $RESULT $CHECK; exit 1" 1 2 15

echo_n_sp ()
{
	echo ${1+"$@"} | tr '\012' ' '
}

compile()
{
	echo ERROR > $RESULT
	$JAVAC -d . $SRCDIR/$1.java > $RESULT 2>&1
	if test "`cat $RESULT`" != "" ; then
		echo "error compiling"
		cat $RESULT
		error=1
	fi
	rm -f $RESULT $CHECK
}

run()
{
	echo "$2" > $CHECK
	echo ERROR > $RESULT
	$JAVA $1 > $RESULT 2>&1
	if cmp -s $RESULT $SRCDIR/$1.out ; then
		:
	else
		cp $RESULT $1.fail
		echo "ERROR: output saved to $1.fail"
		error=1
	fi
	rm -f $RESULT
}

runtest()
{
	error=0
	echo_n_sp "$1 ..." 1>&2
	compile $1
	if test $error = 0 ; then
		run $1
	fi
	if test $error = 0 ; then
		echo "passed" 1>&2
	else
		overallerror=1
	fi
}

ignoretest()
{
	error=0
	echo "$1 ... ignored" 1>&2
}

# Test threadedWaitfor, basically
runtest ExecTest

# Test catching our own death
ignoretest CatchDeath

# Test various ways of stopping threads
ignoretest ThreadStop
runtest DeadThread
runtest tthrd1

# All done okay
exit $overallerror

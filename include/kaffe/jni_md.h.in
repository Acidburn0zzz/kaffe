/*
 * jtypes.h
 * Java types.
 *
 * Copyright (c) 1996, 1997
 *	Transvirtual Technologies, Inc.  All rights reserved.
 *
 * See the file "license.terms" for information on usage and redistribution 
 * of this file. 
 */

#ifndef __jtypes_h
#define __jtypes_h

#undef  JNIEXPORT
#undef  JNICALL
#undef	SIZEOF_INT
#undef	SIZEOF_LONG
#undef	SIZEOF_LONG_LONG
#undef	SIZEOF___INT64
#undef	SIZEOF_VOID_P

typedef float		jfloat;
typedef double		jdouble;
typedef	void*		jref;
typedef unsigned short	jchar;
typedef char		jbyte;
typedef short 		jshort;

#if SIZEOF_INT == 4
typedef int		jint;
#define JINT_MIN        0x80000000
#elif SIZEOF_LONG == 4
typedef long		jint;
#define JINT_MIN        0x80000000L
#else
#error "sizeof(int) or sizeof(long) must be 4"
#endif

#if SIZEOF_LONG == 8
typedef long		jlong;
#define JLONG_MIN       0x8000000000000000L
#elif SIZEOF_LONG_LONG == 8
typedef long long	jlong;
#define JLONG_MIN       0x8000000000000000LL
#elif SIZEOF___INT64 == 8 /* Microsoft's Visual C++ 6.0 */
typedef __int64		jlong;
#define JLONG_MIN       0x8000000000000000i64
#else
#error "sizeof(long) or sizeof(long long) or sizeof(__int64) must be 8"
#endif

typedef	jchar		unicode;
typedef	jbyte		jbool;		/* Must deprecate */
typedef	jbyte		jboolean;

/* An integer type big enough for a pointer or a 32-bit int/float. */
#if SIZEOF_VOID_P <= SIZEOF_INT
typedef jint		jword;
#elif SIZEOF_VOID_P <= SIZEOF_LONG
typedef jlong		jword;
#else
#error "both sizeof(int) and sizeof(long) < sizeof(void*)"
#endif

#endif
